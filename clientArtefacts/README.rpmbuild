Update: 14 Apr 2024 Burn Alting, burn.alting@gmail.com
- Re-write section on changing configuration items at build time
Update: 06 Dec 2023 Burn Alting, burn.alting@gmail.com
- Uplift to latest version of the agent and newer Redhat releases
Update: 22 May 2017 Burn Alting
- Initial Release

This is a README describing how deploy a simple rpmbuild system for this stroom_audit_agent capability.

To create an rpm

- Install minimal system and yum update (and reboot if new kernel)
- Install packages
  sudo yum -y install audit-libs-devel rpm-build redhat-rpm-config make
- Create an rpm build environment which includes the directory tree
    mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
    echo '%_topdir %(echo $HOME)/rpmbuild' > ~/.rpmmacros

- cp stroom_auditd.spec to rpmbuildroot/SPECS
- cp stroom_auditd_agent-x.y.z.tar.gz to rpmbuildroot/SOURCES
- cd ~/rpmbuild

To cycle through a development process, the following function will build
a number of standard targets (el7, el8 and el9) and configure posting details.
Note, you should change the cd command to change to a directory just above your source directory

T () 
{ 
    R=3.1.4
    cd <stroom_auditd_agent_parent>
    tar cfz stroom_auditd_agent-${R}.tar.gz stroom_auditd_agent-${R};
    cp stroom_auditd_agent-${R}.tar.gz ~/rpmbuild/SOURCES;
    cp stroom_auditd_agent-${R}/stroom_auditd.spec ~/rpmbuild/SPECS;
    cd ~/rpmbuild;
    rpmbuild -ba --target=noarch --define 'dist .el7' --define '_dst https://stroom.a1959.org/stroom/datafeed' --define '_sz .nsw' --define '_sz_verbose "NSW State"' --define '_env "Production"' --define '_sys "This is my system"' SPECS/stroom_auditd.spec
    rpmbuild -ba --target=noarch --define 'dist .el8' --define '_dst https://stroom.a1959.org/stroom/datafeed' --define '_sz .nsw' --define '_sz_verbose "NSW State"' --define '_env "Production"' --define '_sys "This is my system"' SPECS/stroom_auditd.spec
    rpmbuild -ba --target=noarch --define 'dist .el9' --define '_dst https://stroom.a1959.org/stroom/datafeed' --define '_sz .nsw' --define '_sz_verbose "NSW State"' --define '_env "Production"' --define '_sys "This is my system"' SPECS/stroom_auditd.spec
}

# The purpose of the defined variables on the rpmbuild command line are to effect the release distribution and
# set system dependant configuration variables that control where event data is sent and specify source system
# descriptors such as the System Name, Environment categorisation (Production, Development) and source system
# location or security zone.

# The defines are
# _dist
#   to identify what release (.el7, .el8, etc) the rpm will be built for
# _dst 
#   to specify a destination URL or URL csv list to post the event data to
#       The script will itterate over each url in the list attempting to post until successful
# _sz
#   to specify the source system's security zone for labelling the rpm (e.g. .nsw, .vic)
#       If you wish to identify your purpose built nodes, you can use the additional define _sz
#       to specify a release name. That is the RPM release will be the concatenation of
#       the _sz variable (should start with a .) and the distribution variable 'dist'
#       So, to set the release name to .nsw.el8 have the pair of defines
#           --define 'dist .el8' --define '_sz .nsw'
# _sz_verbose
#   to specify a verbose version of the source system's security zone that will be provided with the post in the mySecZone http header variable
#       The purpose of the mySecZone http header variable is to allow one
#       to establish regions or zones for the systems. For example, one could
#       set 'mySecZone' to NSW or VIC to indicate the system is in New South Wales or Victoria
#       or to some other appropriate domain.
# _sys
#   to specify the source system's descriptive name (e.g. "Company Finance System") that will be provided with the post in the SYSTEM http header variable
#       The purpose of the SYSTEM http header variable is to allow those reviewing the logs in a cental log management system to get context about the source system.
# _env
#   to specify the soruce system's operating environment (e.g. Production, Development, etc) that will be provided with the post in the ENVIRONMENT http header variable
#       The purpose of the ENVIRONMENT http header variable is to allow those reviewing the logs in a cental log management system to further categorise the source system's context.
